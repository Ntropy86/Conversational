const fs=require('fs');const path=require('path');const reportPath=path.resolve(__dirname,'frontend/.next/report.html');const s=fs.readFileSync(reportPath,'utf8');const key='window.chartData';let idx=s.indexOf(key);if(idx===-1){console.error('window.chartData not found');process.exit(2);}let start=s.indexOf('=',idx);if(start===-1){console.error('equals after window.chartData not found');process.exit(3);}start++;while(start<s.length && /\s/.test(s[start]))start++;if(s[start]!=='['){console.error('expected [ after = but found',s[start]);process.exit(4);}let i=start;let depth=0;for(;i<s.length;i++){const ch=s[i];if(ch==='[')depth++;else if(ch===']'){depth--;if(depth===0){i++;break;}}}const payload=s.slice(start,i);try{const data=JSON.parse(payload);let totalStat=0,totalParsed=0,totalGzip=0;data.forEach(c=>{totalStat+=c.statSize||0;totalParsed+=c.parsedSize||0;totalGzip+=c.gzipSize||0});function fmt(n){return isFinite(n)?(Math.round(n/1024*10)/10+' KB'):'-';}data.sort((a,b)=>(b.statSize||0)-(a.statSize||0));console.log('chunks:',data.length);console.log('total statSize:',fmt(totalStat),' total parsedSize:',fmt(totalParsed),' total gzipSize:',fmt(totalGzip));console.log('\nTop 12 chunks by statSize:');data.slice(0,12).forEach((c,idx)=>{console.log(`\n#${idx+1} name:${c.label||c.name||c.id||"(unknown)"} id:${c.id||"?"} stat:${fmt(c.statSize||0)} parsed:${fmt(c.parsedSize||0)} gzip:${fmt(c.gzipSize||0)} modules:${(c.groups?"has groups":"no groups")}`);if(c.groups){let mods=[];const collect=(g,acc,limit)=>{for(const m of g){if(m.path)acc.push({path:m.path,stat:m.statSize||0,parsed:m.parsedSize||0});if(m.groups)collect(m.groups,acc,limit);if(acc.length>=limit)break}};collect(c.groups,mods,6);if(mods.length){console.log('  example modules:');mods.forEach(m=>console.log(`    - ${m.path} stat:${fmt(m.stat)} parsed:${fmt(m.parsed)}`));}}});}catch(err){console.error('JSON parse failed',err.message);console.log(payload.slice(0,2000));process.exit(5);}